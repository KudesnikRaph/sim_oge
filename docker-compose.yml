services:
  db:
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/initdb:/docker-entrypoint-initdb.d:ro
    networks:
      - myapp_network

  backend:
    build: ./backend
    restart: always
    env_file:
      - .env
    environment:
      - PORT=${BACKEND_PORT}
      - DATABASE_HOST
      - DATABASE_PORT
      - DATABASE_USER
      - DATABASE_PASSWORD
      - DATABASE_NAME
    depends_on:
      - db
    expose:
      - "${BACKEND_PORT}"
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - myapp_network

  frontend:
    build: ./frontend
    restart: always
    depends_on:
      - backend
    networks:
      - myapp_network

  nginx:
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend
    networks:
      - myapp_network

volumes:
  db_data:

networks:
  myapp_network:
    driver: bridge
